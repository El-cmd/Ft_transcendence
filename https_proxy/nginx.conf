events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    
    # Taille maximale des requêtes autorisée
    client_max_body_size 10M;

    # map directive to handle WebSocket connection upgrades
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Serveur pour rediriger HTTP vers HTTPS
    server {
        listen 80;
        server_name _;
        
        # Redirection de tout le trafic HTTP vers HTTPS
        return 301 https://$host:8443$request_uri;
    }

    server {
        listen 443 ssl;
        server_name _;

        ssl_certificate     /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Rediriger tout le trafic vers l'API Gateway
        location / {
            proxy_pass http://api_gateway:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # WebSocket configuration
        location ~ ^/ws/ {
            proxy_pass http://api_gateway:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 86400s;
        }
    }
}